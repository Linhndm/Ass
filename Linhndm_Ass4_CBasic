#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct student
{
	int mark;
	char name[64];
	struct student *pNext;
};
 
typedef struct student student_t;
 
student_t *pHead = NULL;
student_t *pTail = NULL;
 
void insertTopStudent(const char* name, int lenName, int mark)
{
	student_t *newStudent =(student_t*)malloc(sizeof(student_t));
	newStudent -> pNext = NULL;
	newStudent -> mark =  mark;
 
	int i;
 
	for (i = 0; i < lenName; i++)
	{
		newStudent -> name[i] = name[i];
	}
 
 
 
	if (pHead == NULL)
	{
		pHead = newStudent;
		pTail = newStudent;
	}
	else
	{
		newStudent-> pNext = pHead;
		pHead = newStudent;
 
	}
 
}
 
 
void insertBotStudent(const char* name, int lenName, int mark)// cso the dung strlen
{
	student_t *newStudent = (student_t*)malloc(sizeof(student_t));
 
	newStudent -> pNext = NULL;
	newStudent -> mark = mark;
	int i;
	for (i = 0; i < lenName; i++)
	{
		newStudent -> name[i] = name[i];
	}
 
	if (pTail == NULL)
	{
		pHead = newStudent;
		pTail = newStudent;
	}
	else
	{
		pTail -> pNext = newStudent;
		pTail = newStudent;
	}
 
}
 
student_t* findStudent(const char* name)
{
	student_t *pFind = pHead;
	while (pFind != NULL)
	{
		if(strcmp(pFind-> name, name) == 0)
		{
			printf("Find Name: %s", pFind->name);
			return pFind;
		}
		else
		{
			pFind = pFind -> pNext;
		}
	}
	return NULL;
}
 
void removeStudent(const char* name)
{
	student_t* address=findStudent(name);
 
	if (address == NULL)
		return;
 
	student_t* pPre = pHead;
 
	if(address == pHead)
	{
		pHead = pHead -> pNext;
		return;
	}
 
	{
		pPre = pPre -> pNext;
	}
 
	pPre-> pNext = address -> pNext;
 
}
 
void printStudent()
{
	student_t* pPrint = pHead;
	while (pPrint != NULL)
	{
		printf("Name: %s\n", pPrint->name);
		pPrint = pPrint->pNext;
	}
 
}
 
int main()
{
	insertTopStudent("Linhndm", 8, 12);
	insertTopStudent("Linhadm", 8, 12);
	insertTopStudent("Linhbdm", 8, 12);
	insertTopStudent("Linhcdm", 8, 12);
	printStudent();
 
 
	insertBotStudent("Linhqdm", 8, 12);
	insertBotStudent("Linhwdm", 8, 12);
	insertBotStudent("Linhedm", 8, 12);
	printf("\n\n\n");
	printStudent();
 
 
	removeStudent("Linhcdm");
	printf("\n\n\n");
	printStudent();
 
	removeStudent("Linhedm");
	printf("\n\n\n");
	printStudent();
 
	removeStudent("Linhqdm");
	printf("\n\n\n");
	printStudent();
 
	return 0;
}
